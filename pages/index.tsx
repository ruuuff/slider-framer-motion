import Head from "next/head";
import { motion } from "framer-motion";
import { useState, useEffect, useRef } from "react";

const images = [
  "./assets/1.jpg",
  "./assets/2.jpg",
  "./assets/3.jpg",
  "./assets/4.jpg",
  "./assets/5.jpg",
  "./assets/6.jpg",
];

function getFileName(path: string) {
  return path.replace(/^.*[\\\/]/, "").split(".")[0];
}

export default function Home() {
  const [width, setWidth] = useState(0);
  const carouselRef = useRef<HTMLDivElement | null>(null);

  useEffect(() => {
    function updateStateOnResize() {
      if (!carouselRef.current) return;
      const { scrollWidth, offsetWidth } = carouselRef.current;
      setWidth(() => scrollWidth - offsetWidth);
    }

    updateStateOnResize();

    window.addEventListener("resize", updateStateOnResize);
    return () => window.removeEventListener("resize", updateStateOnResize);
  }, []);

  return (
    <>
      <Head>
        <title>Slider with Framer Motion</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="flex items-center justify-center min-h-screen bg-slate-100 dark:bg-slate-600">
        <motion.div
          ref={carouselRef}
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          transition={{ duration: 0.4 }}
          whileTap={{ cursor: "grabbing" }}
          className="w-4/5 max-w-5xl cursor-grab overflow-hidden mobile:w-11/12"
        >
          {/* "key" prop will re-render the element when update the state "width", preventing dragConstraints bug */}
          <motion.div
            key={width}
            drag="x"
            dragConstraints={{ right: 0, left: -width }}
            className="flex space-x-16 laptop:space-x-12 mobile:space-x-6"
          >
            {images.map((imageSrc, index) => (
              <motion.div
                key={index}
                className="min-h-[35rem] min-w-[25rem] laptop:min-h-[30rem] laptop:min-w-[20rem] mobile:min-h-[25rem] mobile:min-w-[15rem]"
              >
                <picture>
                  <img
                    src={imageSrc}
                    alt={`Cat ${getFileName(imageSrc)}`}
                    className="w-full h-full object-cover rounded-3xl pointer-events-none"
                  />
                </picture>
              </motion.div>
            ))}
          </motion.div>
        </motion.div>
      </main>
    </>
  );
}
